          R  LINK/ATTACH COMMAND
          R
          R REWRITTEN BY ROGER ROACH (5/22/67)
          R
          R
          R.  USAGE. . .
          R..  LINK NAME1 NAME2 PROBNO PROGNO -NAME3- -NAME4-
          R..  ATTACH -PROB PROG-
          R
            NORMAL MODE IS INTEGER
            VECTOR VALUES P = $(PRMT)$
            VECTOR VALUES PR = $PERMIT$
            VECTOR VALUES F = $(FILE)$
            VECTOR VALUES FI = $  FILE$
            VECTOR VALUES ATT = $ATTACH$
            VECTOR VALUES BZ = 605757575757K
            VECTOR VALUES MODE = 104K
            DIMENSION PM(6),VEC(5),ME(4),B1(0),B2(0)
            EQUIVALENCE (VEC(5), RNAME1)
          1 ,            (VEC(4), RNAME2)
          1 ,            (VEC(3), MYPROB)
          1 ,            (VEC(2), MYPROG)
            VECTOR VALUES FENCE = 777777777777K
          R
          R..  CHECK ARGUMENTS FOR VALIDITY.
          R
            COMM = COMARG.(0)
            LNAME1 = COMARG.(1)
            WHENEVER LNAME1 .E. FENCE, TRANSFER TO NOARG
            LNAME2 = COMARG.(2)
            WHENEVER LNAME2 .E. FENCE, TRANSFER TO BADFOR
            WHENEVER COMM .E. ATT, TRANSFER TO GDARG
            PROB = COMARG.(3)
            WHENEVER PROB .E. FENCE, TRANSFER TO BADFOR
            PROB = REPROB.(PROB)
            PROG = COMARG.(4)
            WHENEVER PROG .E. FENCE, TRANSFER TO BADFOR
	    PROG = LJUST.(PROG)
            RNAME1 = COMARG.(5)
            WHENEVER RNAME1 .E. FENCE
              RNAME1 = LNAME1
              RNAME2 = LNAME2
              TRANSFER TO GDARG
            END OF CONDITIONAL
            RNAME2 = COMARG.(6)
            WHENEVER RNAME2 .E. FENCE
              RNAME2 = LNAME2
              TRANSFER TO GDARG
            END OF CONDITIONAL
            TEST = COMARG.(7)
            WHENEVER TEST .NE. FENCE, TRANSFER TO BADFOR
            TRANSFER TO GDARG
          R
          R..  BAD ARGUMENTS, COMMENT AND GIVE UP.
          R
NOARG       WHENEVER COMM .E. ATT
               GETCFN.(CF)
               COMFL.(CF)
               CHNCOM.(0)
               END OF CONDITIONAL
            PRINT COMMENT $PROPER FORMAT IS$
            PRINT COMMENT $  LINK NAME1 NAME2 PROB PROG -NAME3- -NAME4-$
            PRINT COMMENT $IF RENAMING, NAME3 NAME4 IS THE OLD NAME,$
            PRINT COMMENT $I.E., THE ONE TO WHICH THE LINK IS DIRECTED.$
            PRINT COMMENT $$
            CHNCOM.(0)
          R
BADFOR      PRMESS. ($ILLEGAL FORMAT IN COMMAND$)
            CHNCOM.(0)
          R
          R..  CHECK VALIDITY OF THIS LINK REQUEST.
          R
GDARG       WHOAMI. (VEC(3)...2)
            ATTNAM. (ME(4)...4)
            UNLINK.(P, F, IGN)
IGN         WHENEVER COMM .E. ATT
               PROB = REPROB.(LNAME1)
               PROG = LNAME2
               VEC(5) = $U.F.D.$
               VEC(4) = F
               END OF CONDITIONAL
            GETBUF.(B1,432)
            GETBUF.(B2,432)
            FERRTN.(NOUSR)
            LINK.(P, F, PROB, PROG, PR, FI, 104K, NOUSR)
            BFOPEN.($R$, P, F, B1(B1+432), B2(B2+432), -0, IGN2)
IGN2        UNLINK.(P,F,LERR)
SRCH        BFREAD.(P,F,PM(6)...6,NOPM,-0,NOPM)
            THROUGH CMPR, FOR I = 5, -1, I .L. 2
CMPR          WHENEVER VEC(I) .NE. PM(I) .AND. PM(I) .NE. $     *$
          1 , TRANSFER TO SRCH
            MODE = BCOCT.(PM(1))
            WHENEVER ( COMM .E. ATT ) .AND. (
          1   (PM(5) .NE. $U.F.D.$) .OR.
          2   (PM(4) .NE. F       ) .OR.
          3   (MODE .NE. 0 )), TRANSFER TO SRCH
          R
          R..  PERMISSION GRANTED, PERFORM LINK/ATTACH.
          R
OK          WHENEVER COMM .E. ATT
              ATTACH.(PROB,PROG,LERR)
              TRANSFER TO CLENUP
              END OF CONDITIONAL
            LINK.(LNAME1,LNAME2,PROB,PROG,RNAME1,RNAME2,MODE,LERR)
          R
CLENUP      BFCLOS.($ALL$, -0, IGN1)
IGN1        CHNCOM.(0)
          R
          R..  ERROR RETURNS.
          R
NOUSR       PRNTER.(40K)
            PRMESS.(PROB,BZ,PROG)
            UNLINK.(P,F,CHNCOM.)
            CHNCOM.(0)
          R
          R... CHECK FOR PRIVILEGED USER
          R
NOPM        USERNO = GLOC.(COMLOC.($USER$))
            RCODE = GLOC.(COMLOC.($RCODE$)+USERNO)
            ATTACH.(ME(4),ME(3), LERR)
            WHENEVER RCODE.A.2K .E. 2K, TRANSFER TO OK
          R
            PRMESS.($    PERMISSION TO$,COMM,606346605757K,RNAME1,
          1  BZ,RNAME2,$ NOT FOUND I$,456057575757K,PROB,BZ,PROG)
            TRANSFER TO CLENUP
          R
LERR        PRNTER.(371K)
            TRANSFER TO CLENUP
          R
            END OF PROGRAM
