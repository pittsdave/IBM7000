*  REPORT - RECORD ATTEMPTED LOGINS AND LOGOUTS - R. ROACH 
*     
* REPORT WILL WRITE INTO A FILE CALLED 'REPORT TIMACC' A RECORD OF
* LOGINS, ATTEMPTED LOGINS AND LOGOUTS.  THE FORMAT OF THIS FILE IS     
*     
* PROB PROG DATE TIME UNIT FLAGS DT1 DT2 DT3 DT4 DT5 CON NAME     
*     
* FLAGS DECRIBE THE ACTION TAKING PLACE, THE FORMAT OF THE FLAGS  
* IS A SPREAD OCTAL WORD 'CNNFF' AS DEFINED BELOW.    
*     
* C - COMMAND FLAG
* 0 FOR LOGIN     
* 1 FOR LOGOUT    
* 2 FOR OTOLOG    
* 4 OTHERWISE     
*     
* NN - NOTIME FLAGS (ON LOGOUT)     
* 00 FOR SYSTEM COMEDOWN
* 01 FOR EXCEEDED SHIFT ALLOTTMENT  
* 02 FOR USER INACTIVE TOO LONG     
* 04 FOR USER HUNG UP   
* 10 FOR USER EXCEEDED ESTTIM OF FIB
* 20 FOR USER LOGGED OUT BY LOAD LEVELER  
*     
* FFF - ERROR FLAGS DETECTED BY LOGIN (OR LOGOUT)     
* 001 FOR SYSTEM FULL   
* 002 FOR NO TIME ALLOTTED ON PRESENT SHIFT     
* 003 FOR ALLOTTED TIME EXCEEDED ON PRESENT SHIFT     
* 004 FOR OUT OF FUNDS  
* 005 FOR PAST EXPIRATION DATE
* 006 FOR ALREAD LOGGED IN    
* 007 FOR HAS FIB JOB RUNNING 
* 010 FOR NOT IN UACCNT (INCLUDES INCORRECT PASSWORD) 
* 011 ILLEGAL UNITID    
* 012 SYSTEM OR MACHINE ERROR, ERROR IN ACCOUNTING FILES (INCL. LOGOUT) 
*     
       ENTRY   LGNRPT        LOGIN REPORT 
       ENTRY   LGTRPT        LOGOUT REPORT
       REM
       EXTERN  GETCOM,GETMEM,SETMEM,GTDYTM,OCRBC,FTIME,ATTNAM     
       EXTERN  ATTACH,FSTATE,OPEN,BUFFER,TRFILE,WRWAIT,CLOSE
       EXTERN  PRINT,PTERR,SETERR,RSTERR,PRDIAG,DERBC 
       REM
       UNLIST  NO LISTING OF EQU, COMMON, MACRO, OR BEQU    
       INSERT  EQU
       INSERT  COMMON
       INSERT  MACRO
       INSERT  BEQU
       IFF     XBUILD,1,1                                        DGPHACK
LOGCMN EQU     64                                                DGPHACK
       LIST
       REM
LGTRPT SXA     XR4,4         SAVE INDEX REGISTER 4    
       STZ     RFLAGS        RESET THE FLAGS    
       CALL    GETCOM(0)     GET THE COMMAND NAME     
       ERA     WLOGNM        SEE IF USER LOGGING IN   
       TNZ     TSTCOM        NO, CAN USE REGULAR CODING     
       LDQ     =H100000      OTHERWISE PRETEND IT'S A LOGOUT
       STZ     RFLAGS        RESET FLAGS  
       TRA     GOTIT         AND BEGIN PROCESSING     
       REM
LGNRPT SXA     XR4,4         SAVE INDEX REGISTER 4    
       STZ     RFLAGS        RESET FLAGS  
       AXT     6,4           STORE BLANKS IN TIME USED VECOTRS    
       CAL     =H            ..     
       SLW     RCON+1,4      ..     
       TIX     *-1,4,1       ..     
TSTCOM CALL    GETCOM(0)     GET COMMAND NAME   
       LDQ     =0            ASSUME 'LOGIN' AT FIRST  
       LAS     WLOGNM        CHECK WITH LOGIN'S NAME  
       TRA     *+2           SKIP IF NOT A LOGIN
       TRA     GOTIT         BRANCH IF A LOGIN  
       LDQ     =H200000      ASSUME AN AUTOMATIC LOGOUT     
       LAS     =HOTOLOG      CHECK FOR 'OTOLOG' 
       LDQ     =H400000      NON-DEFINED IF .GT. 'OTOLOG'   
       TRA     GOTIT         BRANCH IF 'OTOLOG' OR GREATER  
       LDQ     =H100000      MUST BE 'LOGOUT'   
       ERA     =HLOGOUT      CHECK TO MAKE SURE 
       TZE     GOTIT         EXIT IF ASSUMPTION RIGHT 
       LDQ     =H400000      BUT UNDEFINED COMMAND IF NOT   
       REM
GOTIT  XCL                   MOVE COMMAND FLAG TO AC  
       ORS     RFLAGS        AND SAVE IN THE FLAGS    
       XEC.A   CAL(USWICH,1) GET THE USWICH VECTOR    
       ANA     =O700000      NOTIME BITS IN TAG ONLY  
       ALS     3             MOVE INTO POSITION 
       ZET     RFLAGS        AND SAVE IF NOT A LOGIN  
       ORS     RFLAGS        ..     
       LXA     XR4,4         RESTORE INDEX REGISTER 4 
       CAL     1,4             TO OBTAIN THE CALLING FLAGS  
       STA     RFLAGS        SAVE IN RFLAGS (BINARY)  
       ANA     =O777777700000 MAKE SURE THE FLAGS WERE PRESENT    
       ERA     =O300000000000 AS A PAR INSTRUCTION    
       TZE     *+2           SKIP IF THEY WERE THERE  
       ZSA     RFLAGS        BUT RESET RFLAGS 'FFF' IF NOT THERE  
       CAL     RFLAGS        COMPACT FLAGS INTO MQ FOR LATER CONVERSION 
       LGR     9             MOVE 'FFF' INTO MQ 
       ARS     9             ..     
       LGR     6             MOVE 'NN' INTO MQ  
       ARS     6             ..     
       LGR     21            MOVE 'C' INTO MQ   
       STQ     RFLAGS        SAVE IN RFLAGS     
       CALL    OCRBC(RFLAGS) CONVERT TO SPREAD OCTAL  
       STO     RFLAGS        AND SAVE BACK IN RFLAGS  
       REM
       TSX     GTDYTM,4      GET THE DATE AND TIME    
       SLW     RTIME         SAVE FOR LATER CONVERSION
       CALL    FTIME(RTIME,RDATE,RTIME) CONVERT TO MMDDYY HHMM.M  
       CAL     WUNIT         SAVE CURRENT UNIT ID     
       SLW     RUNIT         INTO THE REPORT CARD     
       REM
       XEC.A   CAL(MXUSRS)   GET MAX USERS
       SLW     LNGTH         SAVE IN TEMPORARY LOCATION     
       TSX     DERBC,4       CONVERT TO BCD     
       PAR     LNGTH         ..     
       ALS     18 
       SLW     RCARD+13      SAVE IN THE LAST WORD    
       XEC.A   CAL(NUSERS)   GET THE NO. OF USERS     
       SLW     LNGTH         ..     
       TSX     DERBC,4       ..     
       PAR     LNGTH         ..     
       ANA     =O777777      STORE IN RIGHT HALF OF LAST WORD     
       ORA     RCARD+13      ..     
       ORA     =H 00 00      INSERT LEADING BLANKS    
       SLW     RCARD+13      ..     
       REM
       CAL     PRINT         SETUP ERRORS TO PRINT ONLINE   
       STA*    PTERR         ..     
       CALL    SETERR(IOERR,ILOCK) REFLECT ALL ERRORS TO REPORT   
       CALL    ATTNAM((HOME,,2)) SAVE CURRENT DIRECTORY ATTACHMENT
       CALL    ATTACH(SYSFIL,SYSFIL+1) ATTACH SYSTEM DIRECTORY    
       REM
       TSX     GETMEM,4      GET CURRENT MEMORY BOUND 
       STA     BUFF+3        AND OBTAIN AN I/O BUFFER 
       STA     MEM
       ADD     =432          ..     
       TSX     SETMEM,4      ..     
       REM
       CALL    OPEN(=HW,REPORT,TIMACC,=O120)    
BUFF   CALL    BUFFER(REPORT,TIMACC(**,,432))   
       CALL    FSTATE(REPORT,TIMACC(LNGTH,,1)) GET LENGTH   
       LDQ     LNGTH         TEST LENGTH FOR MULTIPLE OF CARD IMAGE     
       ZAC                   ..     
       DVP     =14           ..     
       TZE     LENGOK        BRANCH IF LENGTH OK
       MPY     =14           BUT TRFILE TO MULTIPLE OF 14 IF NOT  
       XCA                   ..     
       ADD     =1            ..     
       STO     LNGTH         ..     
       CALL    TRFILE(REPORT,TIMACC,LNGTH)
LENGOK CALL    WRWAIT(REPORT,TIMACC,=0(RCARD,,14))    
       CALL    CLOSE(REPORT,TIMACC) 
OUT    CLA     MEM           RESTORE PREVIOUS MEMORY BOUND  
       TZE     *+2           SKIP IF NEVER SET  
       TSX     SETMEM,4      ..     
       STZ     MEM           RESET MEM FLAG     
       CALL    ATTACH(HOME,HOME+1,*) REATTACH TO PROPER DIRECTORY 
       TSX     RSTERR,4      RESET ERROR RETURNS
XR4    AXT     **,4          RESTORE INDEX REGISTER 4 
       TRA     1,4           RETURN 
IOERR  TSX     PRDIAG,4      PRINT DIAGNOSTIC ONLINE  
EREXIT CALL    SETERR(OUT,OUT)
       CALL    CLOSE(REPORT,TIMACC,*)     
       TRA     OUT           ..     
       REM
ILOCK  STO     LCKD+4        FILE INTERLOCK RETURN    
       STQ     LCKD+6        ..     
       TSX     PRINT,4       ..     
       PZE     LCKD,,9       ..     
       TRA     EREXIT        TAKE ERROR EXIT    
       REM
       TTL     STORAGE LOCATIONS AND CONSTANTS                          
LCKD   BCI     3, TIME ACCOUNTING FILE    
       VFD     H18/ILE,O18/605757,36/0,O36/605757575757,36/0
       BCI     2, IS LOCKED.  
REPORT BCI     1,REPORT 
TIMACC BCI     1,TIMACC 
SYSFIL CTSSID     
MEM    PZE     0,0,0         MEMORY BOUND 
LNGTH  PZE     0             LENGTH OF REPORT TIMACC  
HOME   BSS     2             HOME DIRECTORY     
       INSERT  TEMPB
       REM
       RMT     *  
       END  
