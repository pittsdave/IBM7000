       DETAIL
*      FAP  
       TTL     FRRE STORAGE PROGRAMS FOR TSLIB1                         
       REM     BARRY L. WOLMAN
       REM     ELECTRONIC SYSTEMS LABORATORY    
       REM     DECEMBER, 1964 
       REM
       REM     POINT = FREE ( SIZE )
       REM          RETURNS POINTER TO BEGINNING OF BLOCK   
       REM          OF LENGTH SIZE. 
       REM
       REM     NEWMB = FRET ( SIZE, POINT )     
       REM          RETURNS BLOCK POINT WITH GIVEN    
       REM          SIZE TO FREE STORAGE.  IF NEWMB IS
       REM          NON-ZERO, THE MEMORY BOUND WAS REDUCED  
       REM          AND NEWMB IS THE VALUE.     
       REM
       REM     IF THE BLOCK BEING RETURNED IS AT THE TOP OF MEMORY,     
       REM     THE MEMORY BOUND WILL BE RESET AND FRET WILL CHECK 
       REM     TO SEE IF THE LAST BLOCK ON THE FREE LAST CAN ALSO 
       REM     BE ELIMINATED BY A MEMORY BOUND RESET.  IF THE BLOCK     
       REM     BEING RETURNED DOES NOT FALL AT THE TOP OF MEMORY, 
       REM     IT IS ADDED TO A LIST OF FREE BLOCKS KEPT IN ORDER 
       REM     OF THEIR ABSOLUTE LOCATION.  'STRING' CONTAINS A   
       REM     DECREMENT POINTER TO THE FIRST BLOCK ON THE LIST,  
       REM     THE BLOCK POINTED TO CONTAINS ITS SIZE IN THE ADDRESS    
       REM     AND THE NEXT POINTER IN THE DECREMENT.  WHEN A BLOCK     
       REM     IS ADDED TO THE FREE LIST AN ATTEMPT IS MADE TO MERGE    
       REM     IT WITH THE BLOCKS BEFORE AND AFTER IN ORDER TO FORM     
       REM     ONE LARGE BLOCK.  THE FREE LIST IS CHECKED BY FREE WHICH 
       REM     WILL SPLIT A BLOCK IN PREFERENCE TO EXTENDING THE MEMORY 
       REM     BOUND.   
       REM
       REM     WHEN A BLOCK OF STORAGE IS RETURNED ITS LOCATION IS
       REM     CHECKED.  IF THE BLOCK OVERLAPS THE MEMORY BOUND OR ANY  
       REM     OF THE BLOCKS ALREADY RETURNED, A COMMENT IS PRINTED     
       REM     AND EXIT IS CALLED.  SIMILARLY, FREE CALLS EXIT WHEN     
       REM     FREE STORAGE IS EXHAUSTED. 
       REM
       REM     IF ALL FREE STORAGE OBTAINED DURING EXECUTION IS EVEN-   
       REM     TUALLY RETURNED, THE MEMORY BOUND WILL BE BACK AT ITS    
       REM     ORIGINAL VALUE 
       REM
       LBL     FREE
       ENTRY   FREE     
       ENTRY   FRER          FREE, ALLOWING ERROR RETURN WITH AC = 0    
       ENTRY   FRET     
       REM
       EXTERN  SETMEM,GETMEM,EXIT,WRFLX   
       REM
FRER   STZ     ERRSW         SET RETURN-ON-ERROR SWITCH     
       TRA     FREE+1   
FREE   STL     ERRSW         RESET ERROR SWITCH 
       CLA*    1,4           GET SIZE OF REGION 
       TZE     2,4           EXIT IF REGION SIZE IS ZERO    
       STO     NUM           SAVE NUMBER WANTED 
       SXA     FREX4,4       SAVE INDEX REGISTER 4    
       AXT     STRING,4      INITIALIZE PREV FOR STRING SEARCH    
       SXA     PREV,4        ..     
       LDC     STRING,4      GET POINTER TO START OF STRING 
CHECK  TXL     EXTEND,4,0    ZERO MEANS END OF STRING 
       CLA     ,4            GET NEXT ITEM ON FREE STRING   
       SCA     RESULT,4      X4 CONTAINS POINTER TO POSSIBLE BLOCK
       REM                   SO SAVE THE POINTER
       ANA     =O77777       LOOK ONLY AT ADDRESS ( NUMBER )
       SUB     NUM           COMPARE WITH NUMBER WE WANT    
       TZE     OKSAME        ZERO MEANS WE HAVE EXACT BLOCK 
       TPL     OK            PLUS MEANS BLOCK IS LARGER THAN WHAT WE WAN
       SCA     PREV,4        SAVE POINTER, WILL BE PREVIOUS ON LIST     
       CLA     ,4            GET POINTER TO NEXT ON LIST    
       PDC     ,4            FROM THE DECREMENT 
       TRA     CHECK         AND GO CHECK NEXT ON LIST
OKSAME CLA     ,4            WE WILL REMOVE BLOCK FROM LIST 
       STD*    PREV          BY SETTING NEXT OF PREV TO NEXT OF RESULT  
       PDC     ,4            TEST NEXT POINTER  
       TXH     LEAVE,4,0     FOR ZERO, MEANING END OF STRING
       CLA     PREV          END OF STRING REMOVED, SET NEW END   
       STA     LAST          ..     
       TRA     LEAVE         GO RETURN FROM FREE
OK     STA     ,4            SAVE DIFFERENCE AS NEW COUNT OF BLOCK
       ADD     RESULT        FORM ADDRESS OF FOLLOWING BLOCK
       TRA     LEAVE+1       AND USE THAT AS RESULT, GO EXIT
EXTEND TSX     GETMEM,4      MUST EXTEND MB, SO GET MB
       STO     RESULT        AND SET RESULT     
       ADD     NUM           ADD NUMBER WE WANT 
       CAS     =O77777       CHECK UPPER LIMIT  
       TRA     TOOBAD        LIMIT EXCEEDED, SO SORRY 
       TRA     *+1           LIMIT HIT, OK TO SET MEMORY BOUND    
       TSX     SETMEM,4      SET THE NEW MEMORY BOUND 
LEAVE  CLA     RESULT        GET POINTER TO BLOCK     
FREX4  AXT     **,4          RESTORE INDEX REGISTER 4 
       TRA     2,4           RETURN TO CALLER   
TOOBAD CLA     NUM           CONVERT SIZE TO OCTAL    
       TSX     OCTAL,4       ..     
       SLW     MESS          SAVE IN ERROR MESSAGE    
       TSX     WRFLX,4       PRINT THE ERROR MESSAGE  
       MZE     MESS,,8       ..     
       CLA     ERRSW         DID CALLER WANT CONTROL RETURNED ON ERROR  
       TZE     FREX4         .. YES   EXIT WITH AC = 0
       LAC     FREX4,4       GET TRUE LOCATION OF CALL TO FREE    
ERRXIT PXA     ,4            AND PUT IT IN AC   
       TSX     EXIT,4        THEN CALL EXIT     
       EJECT
FRET   SXA     FRERTN,4      SAVE INDEX REGISTER 4    
       CLA*    1,4           GET SIZE OF BLOCK BEING RETURNED     
       TZE     3,4           EXIT IF SIZE IS ZERO     
       STO     NUM           SAVE SIZE OF BLOCK 
       TSX     OCTAL,4       CONVERT TO OCTAL   
       SLW     ERRMES+7      SAVE IN ERROR MESSAGE IN CASE NEEDED 
       LXA     FRERTN,4      RESTORE INDEX 4    
       CLA*    2,4           GET POINTER TO BLOCK BEING RETURNED  
       STO     WHAT          SAVE POINTER 
       TSX     OCTAL,4       CONVERT TO OCTAL   
       SLW     ERRMES+5      SAVE IN ERROR MESSAGE IN CASE NEEDED 
RETURN SYN     *  
       TSX     GETMEM,4      GET THE MEMORY BOUND     
       SUB     WHAT          SUBTRACT BEGINNING OF BLOCK    
       TMI     ERROR         MINUS MEANS BLOCK ABOVE MB, ERROR    
       SUB     NUM           SUBTRACT NUMBER IN BLOCK 
       TMI     ERROR         MINUS MEANS BLOCK EXTENDS ABOVE MB   
       TNZ     LONG          DIFFERENT MEANS WE CANNOT RESET MEMORY BOUN
       LAC     LAST,4        GET POINTER TO HIGHEST BLOCK ON STRING     
       PCA     ,4            ADDRESS OF BLOCK TO AC   
       ADM     ,4            ADD SIZE OF BLOCK TO GET UPPER BOUND 
       ANA     =O77777       CONSIDER ONLY ADDRESS    
       SUB     WHAT          COMPARE WITH CURRENT MEMORY BOUND    
       TNZ     RESET         CAN'T THROW THIS BLOCK AWAY IF NON-ZERO    
       SCA     WHAT,4        SET NEW MEMORY BOUND     
       AXT     STRING,4      INITIALIZE PREV FOR STRING SEARCH    
       SXA     PREV,4        ..     
       LDC     STRING,4      SEARCH STRING FOR LAST ELEMENT 
REMOVE PCA     ,4            ADDRESS OF BLOCK TO AC   
       SUB     LAST          COMPARE WITH BLOCK WE'RE LOOKING FOR 
       TZE     NEWLST        ZERO MEANS WE FOUND IT   
       SCA     PREV,4        SAVE POINTER 
       CLA     ,4            GET POINTER TO NEXT
       PDC     ,4            FROM DECREMENT OF THIS REGISTER
       TRA     REMOVE        AND CONTINUE LOOKING     
NEWLST CLA     PREV          PREVIOUS BLOCK BECOMES LAST    
       STA     LAST          ..     
       ZAC                   REMOVE LAST BLOCK FROM STRING  
       STD*    PREV          ..     
RESET  CLA     WHAT          GET NEW VALUE FOR MEMORY BOUND 
       TSX     SETMEM,4      AND SET THE MEMORY BOUND 
FRERTN AXT     **,4          RESTORE INDEX REGISTER 4 
       TRA     3,4           EXIT WITH NEW MB IN AC   
LONG   AXT     STRING,4      INITIALIZE PREV FOR STRING SEARCH    
       SXA     PREV,4        ..     
       STZ*    WHAT          CLEAR REGISTER BEING RETURNED  
       LDC     STRING,4      GET POINTER TO NEXT ON STRING  
LOOK   TXL     INSERT,4,0    ZERO MEANS END OF STRING 
       PCA     ,4            PUT ADDRESS OF BLOCK IN AC     
       CAS     WHAT          COMPARE WITH BLOCK WE ARE RETURNING  
       TRA     INSERT        GO INSERT BLOCK AT THIS POINT  
       TRA     ERROR         BLOCK ALREADY ON LIST, ERROR   
       SCA     PREV,4        SAVE POINTER 
       CLA     ,4            GET POINTER TO NEXT REGISTER   
       PDC     ,4            FROM DECREMENT OF THIS ONE     
       TRA     LOOK          KEEP LOOKING 
INSERT PCD     ,4            GET UNCOMPLEMENTED X4 IN AC    
       STD*    WHAT          SET NEXT COMPONENT OF BLOCK RETURNED 
       LXA     WHAT,4        GET ADDRESS OF BLOCK BEING RETURNED  
       PXD     ,4            IN DECREMENT OF AC 
       STD*    PREV          AND MAKE NEW BLOCK NEXT OF PREVIOUS  
       CLA     NUM           GET SIZE OF BLOCK  
       STA*    WHAT          SAVE SIZE IN STRING WORD 
       STZ     DIFF          RESET SWITCH 
MERGE  CLA*    PREV          GET PREVIOUS BLOCK WITH COUNT  
       ADM     PREV          ADD THE ADDRESS OF THE BLOCK   
       ANA     =O77777       CONSIDER ONLY ADDRESS PORTION  
       CAS     WHAT          COMPARE WITH ADDRESS OF BLOCK AHEAD  
       TRA     ERROR         BLOCKS OVERLAP, ERROR    
       TRA     *+2           CAN MERGE BLOCKS   
       TRA     NOCOMP        CANNOT MERGE BLOCKS
       CLA*    PREV          GET COUNT OF FIRST BLOCK 
       ADM     NUM           ADD SIZE OF NEXT BLOCK   
       STA*    PREV          SAVE AS NEW SIZE OF FIRST BLOCK
       CLA*    WHAT          REMOVE SECOND BLOCK FROM STRING
       STD*    PREV          ..     
       TRA     TESNEX        IN THIS CASE DON'T UPDATE PREV 
NOCOMP CLA     WHAT          UPDATE PREV TO BE NEXT   
       STO     PREV          ..     
       CLA*    PREV          GET POINTER TO NEXT AFTER PREV 
TESNEX SYN     *  
       PDC     ,4            GET POINTER TO NEXT FROM DECREMENT   
       TXL     SETLST,4,0    ZERO MEANS NEW LAST FOUND
       ZET     DIFF          IS THIS FIRST OR SECOND TIME   
       TRA     MERDON        SECOND, SO SKIP    
       STL     DIFF          SET SWITCH FOR NEXT TIME 
       SCA     WHAT,4        THIS ADDRESS BECOMES WHAT
       CLA     ,4            GET COUNT    
       STA     NUM           AND ADDRESS PORTION BECOMES NUM
       TRA     MERGE         GO TRY SECOND MERGER     
SETLST CLA     PREV          SET NEW VALUE OF LAST    
       STA     LAST          ..     
MERDON SYN     *  
       ZAC                   CLEAR THE AC SINCE MB WAS NOT RESET  
       TRA     FRERTN        AND GO EXIT FROM FRET    
ERROR  TSX     WRFLX,4       WRITE ERROR MESSAGE
       MZE     ERRMES,,8     ..     
       LAC     FRERTN,4      RESTORE RETURN     
       TRA     ERRXIT        TAKE ERROR EXIT    
OCTAL  SXA     OCTXIT,4      SAVE RETURN  
       LGR     15            SHIFT NUMBER TO MQ 
       ZAC                   CLEAR THE AC 
       AXT     5,4           SET FOR 5 DIGITS   
       ALS     3             PERFORM CONVERSION 
       LGL     3             ..     
       TIX     *-2,4,1       REPEAT LOOP  
       ORA     =H 00000      INSERT LEADING BLANK     
OCTXIT AXT     **,4          RESTORE INDEX
       TRA     1,4           RETURN 
       EJECT
       REM     VARIABLES, CONSTANTS 
       REM
MESS   BCI     8,****** LOCATIONS OF FREE STORAGE ARE UNAVAILABLE.
ERRMES BCI     8,**ILLEGAL CALL OF FRET, BLOCK ****** SIZE ****** 
RESULT
NUM   
DIFF  
WHAT  
PREV  
STRING PZE     ,,0           POINTER TO BEGINNING OF FREE STRING  
LAST   PZE                   POINTER TO LAST ON STRING
ERRSW  BSS     1             RETURN-ON-ERROR SWITCH   
       END  
