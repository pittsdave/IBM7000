       DETAIL
*      COUNT   128
*IOLP         IOSET,IOPAR,IOEND SEPTEMBER 8,1961 VERSION 2  
       REM   FOR USE WITH MADTRAN TRANSLATED PROGRAMS ON THE
       REM                       709/90  ONLY   
       REM
       REM                IOSET     
       REM                IOPAR     
       REM                IOEND     
       REM
       REM         AUXILIARY INPUT-OUTPUT PROCEDURE FOR MAD 
       REM
       REM PURPOSE--  TO PROVIDE A MEANS OF GENERATING ANY SERISE OF MAD
       REM      STATEMENTS WITHIN AN INPUT-OUTPUT LIST, MAKING POSSIBLE 
       REM      COMPLETE GENERALITY FOR INPUT-OUTPUT. 
       REM CALLING SEQUENCES--
       REM      PRINT FORMAT ALPHA, L1, IOSET.(LOC1)  
       REM      EXECUTE IOPAR.( L2 )
       REM      EXECUTE IOEND.(LOC2)
       REM ARGUMENTS--  
       REM      ALPHA -- NORMAL FORMAT FOR PRINT OR READ    
       REM      L1,L2 -- NORMAL INPUT-OUTPUT LISTS    
       REM      LOC1 -- LOCATION WHERE MAD SEQUENCE BEGINS  
       REM      LOC2 -- LOCATION WHERE PROGRAM WILL GO AFTER COMPLETING 
       REM              LIST. IF OMITTED, IOEND WILL RETURN TO THE
       REM              STATEMENT FOLLOWING EXECUTE IOEND.  
       REM USE--  
       REM      EXECUTING IOSET WILL CAUSE THE PROGRAM TO LEAVE THE I/O 
       REM      LIST WITHOUT TERMINATING THE FORMAT, TRANSFERRING CON-  
       REM      TROL TO LOC1. 
       REM      EXECUTING IOPAR WILL CAUSE THE LIST L2 TO BE PRINTED OR 
       REM      READ AS THROUGH PART OF THER ORIGINAL I/O LIST. THE FOR-
       REM      MAT WILL BE CONTINUED EXACTLY AS THOUGH THE LIST WERE   
       REM      PART OF THE ORIGINAL I/O LIST.  
       REM      EXECUTING IOEND TERMINATES THE I/O LIST AND RETURNS AS  
       REM      INDICATED ABOVE.    
       REM RESTRICTIONS--     
       REM      WHEN USED IN THE LIST FOR IOPAR, MULTIPLY SUBSCRIPTED   
       REM      ARRAYS MUST APPEAR WITH MULTIPLE SUBSCRIPTS OR WITH A   
       REM      VARIABLE SINGLE SUBSCRIPT. (I.E. IF BB IS A MULTIPLY    
       REM      SUBSCRIPTED ARRAY, THEN EITHER BB OR BB(5) WOULD BE     
       REM      ILLEGAL.)     
       REM      RESTRICTIONS ON THE USE OF ERASABLE ARE THE SAME AS IN  
       REM      A NORMAL I/O LIST.  
       REM
       REM
       REM                IOITR     
       REM                IOSCP     
       REM
       REM         ROUTINE FOR FORTRAN I-O ITERATIONS IN MAD PROGRAMS   
       REM
       REM PURPOSE--    
       REM        IOITR AND IOSCP WERE WRITTEN TO ALLOW MADTRAN GENERA- 
       REM    TION OF THE FORTRAN I-O ITERATIONS IN THE TRANSLATED MAD  
       REM    PROGRAM BY USING IOSET, IOPAR AND IOEND.
       REM CALLING SEQUENCE (AS GENERATED BY MADTRAN)--     
       REM        EXECUTE IOITR.(,M1,M2,M3)     
       REM        EXECUTE IOSCP.    
       REM ARGUMENTS--  
       REM        V-- ITERATION VARIABLE (USUALLY USED FOR INDEXING)    
       REM        M1-- INITIAL VALUE OF THE ITERATION VARIBLE V   
       REM        M2-- LAST VALUE OF THE ITERATION VARIABLE USED  
       REM        M3-- INCREMENT TO BE USED ON V
       REM USE--  
       REM        EXECUTE IOITR CAUSES V TO BE SET TO ITS INITIAL VALUE,
       REM    M1, AND THE VALUES OF M2 AND M3 TO BE SAVED FOR USE OF    
       REM    IOSCP.    
       REM        EXECUTING IOSCP CAUSES THE VALUE OF V TO BE COMPARED  
       REM    WITH M2 AND IF NOT GREATER THAN OR EQUAL TO M2, CAUSES IT 
       REM    TO BE INCREMENTED BY M3 AND CONTROL RETURNED TO THE BEGIN'
       REM    NING OF THE CORRESPONDING ITERATION, OTHERWISE, CONTROL   
       REM    GOES TO THE NEXT STATEMENT AFTER  EXECUTE IOSCP.    
       REM RESTRICTIONS--     
       REM        IOITR AND IOSCP MAY BE NESTED THREE DEEP, BUT THERE   
       REM    MUST BE A STATEMENT -- EXECUTE IOSCP.-- CORRESPONDING TO  
       REM    EACH USE OF IOITR FOR PROPER NESTING OF THE ITERATION.    
       LBL     IOEN
       ENTRY   IOSET    
       ENTRY   IOPAR    
       ENTRY   IOEND    
       ENTRY   IOSCP    
       ENTRY   IOITR    
IOITR  AXT     -4,1          TABLE SIZE TO XA--ADDR. IS CHANGED   
       TXI     *+1,1,4       INCREMENT TABLE SIZE     
       CLA     1,4
       STA     T,1           SET VARIABLE ADDR. 
       CLA*    2,4           INITIALIZE   
       STO*    1,4             INDEX
       CLA*    3,4           PICKUP END OF ITERATION TEST   
       STO     T-1,1         SAVE IN TABLE
       CLA*    4,4           PICK UP INCREMENT  
       STO     T-2,1         SAVE IN TABLE
       SXA     IOITR,1       SAVE TABLE SIZE    
       PXA     ,4            SAVE RETURN LINKAGE IN TABLE   
       STA     T-3,1    
       TRA     5,4
IOSCP  LXA     IOITR,1       TABLE SIZE TO XA   
       CLA*    T,1           INCREMENT    
       ADD     T-2,1           VARIABLE   
       STO*    T,1             AND STORE  
       SUB     T-1,1         TEST FOR END OF ITERATION
       TZE     *+2
       TPL     NEXT          ITERATION COMPLETE IF TAKEN    
       CLA     T-3,1         PICK UP RETURN INDEX     
       PAX     ,4            PUT IN XC    
       TRA     5,4           RETURN TO BEGINNING OF ITERATION     
 NEXT  TXI     *+1,1,-4      DECREMENT TABLE SIZE     
       SXA     IOITR,1       SAVE TABLE SIZE    
       TRA     1,4           RETURN 
 T     BES     11            FOUR ENTRY TABLE   
       PZE  
IOPAR  CLA     1,4                SECONDARY ENTRY -- PRINTS VARIABLES   
       STP     *+1                MAY CHANGE NEXT INSTRUCTION TO TXH    
       TRA     OUT
       STA     *+2
       STD     *+1
       STR     **,,**             RE-ENTER I/O LIST   
       TXI     IOPAR,4,-1     
OUT    TRA     1,4
       REM
 IOEND SXD     IR4,4    
       STR  
       LXD     IR4,4    
       CLA     1,4
       STP     *+1                MAY CHANGE NEXT INSTRUCTION TO TXH    
       TRA     OUT
IOSET  TRA*    1,4                GO TO SPECIFIED LOCATION  
 IR4  
       END  
