* J. W. PODUSKA ... CONV - UTILITY CONVERSION ROUTINES.  
       COUNT   150
       NOLNK
       REM
       ENTRY   CTIME         CONVERT 60TH'S TO 'HHMM.M'.    
       ENTRY   TCTIME        CONVERT 60TH'S TO ' HH.HH'.    
       REM
       ENTRY   DTBC          DECIMAL-TO-BINARY CONVERSION.  
       ENTRY   BTDC          BINARY-TO-DECIMAL CONVERSION.  
       ENTRY   OTBC          OCTAL-TO-BINARY CONVERSION.    
       ENTRY   BTOC          BINARY-TO-OCTAL CONVERSION.    
       REM
       ENTRY   RPL           REPLACE LEADING A'S BY B'S     
       ENTRY   BZL           .. ZEROS BY BLANKS 
       ENTRY   NZL           .. ZEROS BY NULLS  
       ENTRY   NBL           .. BLANKS BY NULLS 
       ENTRY   ZBL           .. BLANKS BY ZEROS 
       LBL     IOCONV
       REM
       REM     CTIME - CONVERT 60TH'S TO HOURS, MINUTES, AND TENTHS.    
       REM
CTIME  ZAC                   CLEAR AC, ARG IN MQ, B35.
       VDP     =O000000040753,,28  =10*60*60*60, GET TENS OF HOURS.    
       VDP     =O000000322740,,6   =60*60*60, GET UNITS OF HOURS. 
       VDP     =O000004312000,,6   =10*60*60, GET TENS OF MINUTES.
       VDP     =O000034100000,,6   =60*60, GET UNITS OF MINUTES.  
       VDP     =O026400000000,,12  =6*60, INSERT TENTHS.    
       ZAC                   CLEAR OUT REMAINING GARBAGE.   
       LGL     6             GET TENS OF HOURS, 
       TNZ     *+2           IF ZERO,     
       CAL     =H00000       REPLACE BY BLANK.  
       LGR     6             RESTORE TIME,
       XCL                   MOVE TO LAC, 
       ORA     =H0000.0      INSERT DECIMAL POINT,    
       TRA     1,4           AND RETURN WITH 'HHMM.M'.
       REM
       REM     TCTIME - CONVERT 60TH'S TO HOURS AND HUNDRETHS.    
       REM
TCTIME ZAC                   CLEAR AC, ARG IN MQ.     
       VDP     =O000000040753,,28  =10*60*60*60, GET TENS OF HOURS.    
       VDP     =O000000322740,,6   =60*60*60, GET UNITS OF HOURS. 
       VDP     =O000250600000,,12  =6*60*60, GET TENTHS AND ROOM FOR POINT.   
       VDP     =O002070000000,,6   =6*6*60, GET HUNDRETHS OF HOURS.     
       XCL                   MOVE TO LAC, 
       ORA     =H 00.00      INSERT BLANK AND PERIOD, 
       TRA     1,4           AND RETURN WITH ' HH.HH'.
       REM
       REM     DTBC - CONVERT 6 BCD DIGITS TO BINARY INTEGER.     
       REM
DTBC   ZAC                   CLEAR AC (ARG IN MQ),    
       AXT     6,7           AND SET FOR 6 ITERATIONS.
DTBCLP STO     TNUM          SAVE PARTIAL CONVERSION. 
       RQL     2             N+D/16.
       LGL     1             2*N+D/8.     
       SUB     TNUM          N+D/8. 
       LGL     2             4*N+D/2.     
       ADD     TNUM          5*N+D. 
       LGL     1             10*N+D.
       TIX     DTBCLP,7,1    LOOP 6 TIMES.
       TRA     1,4           AND RETURN WITH RESULT IN AC.  
       REM
TNUM   PZE                   TEMP USED BY DTBC. 
       REM
       REM     BTDC - CONVERT BINARY INTEGER TO 6 BCD DIGITS.     
       REM
BTDC   ZAC                   CLEAR AC, ARG IN MQ.     
       VDP     =O000000006065,,30   FORM HUNDRED THOUSANDS DIGIT.  
       VDP     =O000000047040,,6    FORM TEN THOUSANDS DIGIT.
       VDP     =O000000372000,,6    FORM THOUSANDS DIGIT.    
       VDP     =O000003100000,,6    FORM HUNDREDS DIGIT.     
       VDP     =O000024000000,,6    FORM TENS DIGIT.   
       VDP     =O000200000000,,6    FORM UNITS DIGIT.  
       XCL                   MOVE RESULT TO AC, 
       TRA     1,4           AND RETURN TO CALLER.    
       REM
       REM     OTBC - CONVERT 6 OCTAL BCD DIGITS TO BINARY. 
       REM
OTBC   CAL     =1B16         GET BIT FOR SETTING OVERFLOW   
       TOV     *+1           TURN OFF OVERFLOW  
       RQL     3             SKIP THREE BITS AND
       LGL     3             SHIFT IN THREE BITS.     
       TNO     *-2           CONTINUE UNTIL OVERFLOW SET.   
       TRA     1,4           RETURN WITH ANSWER IN LAC.     
       REM
       REM     BTOC - CONVERT BINARY TO OCTAL BCD.    
       REM
BTOC   CAL     =1B34         GET BIT FOR SETTING OVERFLOW.  
       TOV     *+1           TURN OFF OVERFLOW  
       ALS     3             PULL IN THREE ZERO BITS. 
       LGL     3             SHIFT IN THE DIGIT.
       TNO     *-2           CONTINUE UNTIL OVERFLOW SET.   
       TRA     1,4           RETURN WITH ANSWER IN LAC.     
       REM
       REM     RPL, ETC. - REPLACE LEADING A'S BY B'S 
       REM
RPL    ERA*    1,7           MAKE ALL A'S 0     
       AXT     36,6          6 CHARS
       LGR     6             ..     
       TZE     *+2           ARE WE THERE YET   
       TIX     *-2,6,6       NO, KEEP SHIFTING  
       CAL*    2,7           YES, GET B'S 
       ERA*    1,7           SET UP FOR FINAL 'ERA'   
       LGL     42,6          BACK TO AC   
       ERA*    1,7           CONVERT CHARS BACK 
       TRA     3,7           RETURN 
       REM
       REM
BZL    TSX     RPL,7         CALL CONVERTER     
       PAR     =0            .. TO MAKE 0'S     
       PAR     BLANKS        .. BLANKS    
       TRA     1,4           RETURN 
       REM
       REM
NZL    TSX     RPL,7         CALL CONVERTER     
       PAR     =0            .. TO MAKE 0'S     
       PAR     NULLS         .. NULLS     
       TRA     1,4           RETURN 
       REM
       REM
NBL    TSX     RPL,7         CALL CONVERTER     
       PAR     BLANKS        TO MAKE LEADING BLANKS   
       PAR     NULLS         .. NULLS     
       TRA     1,4           RETURN 
       REM
       REM
ZBL    TSX     RPL,7         CALL CONVERTER     
       PAR     BLANKS        TO MAKE LEADING BLANKS   
       PAR     =0            .. ZEROS     
       TRA     1,4           RETURN 
       REM
       TTL     STORAGE AND CONSTANTS.                                   
       EJECT
BLANKS OCT     606060606060   
NULLS  OCT     575757575757   
       REM
       END  
